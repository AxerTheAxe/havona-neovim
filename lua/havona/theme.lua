local p = require("havona.palette")

local M = {}

function M.load_colors()
  local highlights = {
    -- Neovim UI
    ["Normal"] = { fg = p.text, bg = p.base },
    ["NormalNC"] = { fg = p.text, bg = p.base },
    ["NormalFloat"] = { fg = p.text, bg = p.surface },
    ["FloatBorder"] = { fg = p.hi_med, bg = p.surface },
    ["FloatTitle"] = { fg = p.muted },
    ["VertSplit"] = { fg = p.hi_med, bg = p.base },
    ["LineNr"] = { fg = p.muted },
    ["Cursor"] = nil,
    ["MatchParen"] = { fg = p.text, bg = p.hi_med },
    ["CursorColumn"] = { bg = p.hi_low },
    ["CursorLine"] = { bg = p.hi_low },
    ["CursorLineNr"] = { fg = p.text },
    ["ColorColumn"] = { bg = p.hi_low },
    ["Folded"] = { fg = p.text, bg = p.surface },
    ["FoldColumn"] = { fg = p.muted },
    ["SignColumn"] = { fg = p.text, bg = p.base },
    ["Visual"] = { fg = p.base, bg = p.havona },
    ["Question"] = { fg = p.gold },
    ["ModeMsg"] = { fg = p.subtle },
    ["MoreMsg"] = { fg = p.lilac },
    ["Search"] = { link = "Visual" },
    ["Substitute"] = { fg = p.base, bg = p.azalea },
    ["IncSearch"] = { link = "Search" },
    ["CurSearch"] = { link = "IncSearch" },
    ["DarkenedPanel"] = { bg = p.surface },
    ["StatusLine"] = { fg = p.havona, bg = p.surface },
    ["StatusLineNC"] = { fg = p.muted, bg = p.surface },
    ["DarkenedStatusline"] = { bg = p.surface },
    ["StatusLineTerm"] = { link = "StatusLine" },
    ["StatusLineTermNC"] = { link = "StatusLineNC" },
    ["TabLine"] = { fg = p.subtle, bg = p.surface },
    ["TabLineFill"] = { bg = p.surface },
    ["TabLineSel"] = { fg = p.text, bg = p.base },
    ["Pmenu"] = { fg = p.subtle, bg = p.surface },
    ["PmenuSbar"] = { bg = p.hi_low },
    ["PmenuSel"] = { fg = p.text, bg = p.overlay },
    ["PmenuThumb"] = { bg = p.hi_med },
    ["WildMenu"] = { link = "IncSearch" },
    ["Title"] = { fg = p.text },
    ["NvimInternalError"] = { fg = p.text, bg = p.azalea },
    ["RedrawDebugClear"] = { fg = p.text, bg = p.gold },
    ["RedrawDebugComposed"] = { fg = p.text, bg = p.puya },
    ["RedrawDebugRecompose"] = { fg = p.text, bg = p.azalea },

    -- Syntax
    ["Boolean"] = { fg = p.havona },
    ["Character"] = { fg = p.gold },
    ["Comment"] = { fg = p.muted, italic = false },
    ["Conditional"] = { fg = p.puya },
    ["Constant"] = { fg = p.gold },
    ["Debug"] = { fg = p.havona },
    ["Define"] = { fg = p.lilac },
    ["Delimiter"] = { fg = p.subtle },
    ["Error"] = { fg = p.azalea },
    ["Exception"] = { fg = p.puya },
    ["Float"] = { fg = p.gold },
    ["Function"] = { fg = p.havona },
    ["Identifier"] = { fg = p.havona },
    ["Include"] = { fg = p.puya },
    ["Keyword"] = { fg = p.puya },
    ["Label"] = { fg = p.spearmint },
    ["Macro"] = { fg = p.lilac },
    ["Number"] = { fg = p.gold },
    ["Operator"] = { fg = p.subtle },
    ["PreCondit"] = { fg = p.lilac },
    ["PreProc"] = { fg = p.lilac },
    ["Repeat"] = { fg = p.puya },
    ["Special"] = { fg = p.havona },
    ["SpecialChar"] = { fg = p.havona },
    ["SpecialComment"] = { fg = p.lilac },
    ["SpecialKey"] = { fg = p.spearmint },
    ["SpellBad"] = { sp = p.azalea, undercurl = true },
    ["SpellCap"] = { sp = p.subtle, undercurl = true },
    ["SpellLocal"] = { sp = p.subtle, undercurl = true },
    ["SpellRare"] = { sp = p.subtle, undercurl = true },
    ["Statement"] = { fg = p.puya },
    ["StorageClass"] = { fg = p.spearmint },
    ["String"] = { fg = p.gold },
    ["Structure"] = { fg = p.spearmint },
    ["Tag"] = { fg = p.spearmint },
    ["Todo"] = { fg = p.lilac },
    ["Type"] = { fg = p.spearmint },
    ["Typedef"] = { link = "Type" },
    ["Underlined"] = { underline = true },
    ["ErrorMsg"] = { fg = p.azalea, bold = true },
    ["WarningMsg"] = { fg = p.gold },
    ["NonText"] = { fg = p.muted },
    ["Directory"] = { fg = p.spearmint, bg = nil },
    ["Conceal"] = nil,

    -- Diffs
    ["DiffAdd"] = { bg = p.spearmint, blend = 20 },
    ["DiffChange"] = { bg = p.overlay },
    ["DiffDelete"] = { bg = p.azalea, blend = 20 },
    ["DiffText"] = { bg = p.havona, blend = 20 },
    ["diffAdded"] = { link = "DiffAdd" },
    ["diffChanged"] = { link = "DiffChange" },
    ["diffRemoved"] = { link = "DiffDelete" },

    -- Health check
    ["healthError"] = { fg = p.azalea },
    ["healthSuccess"] = { fg = p.spearmint },
    ["healthWarning"] = { fg = p.gold },

    -- HTML
    ["htmlArg"] = { fg = p.lilac },
    ["htmlBold"] = { bold = true },
    ["htmlEndTag"] = { fg = p.subtle },
    ["htmlH1"] = { fg = p.lilac, bold = true },
    ["htmlH2"] = { fg = p.spearmint, bold = true },
    ["htmlH3"] = { fg = p.havona, bold = true },
    ["htmlH4"] = { fg = p.gold, bold = true },
    ["htmlH5"] = { fg = p.puya, bold = true },
    ["htmlH6"] = { fg = p.spearmint, bold = true },
    ["htmlItalic"] = { italic = false },
    ["htmlLink"] = { fg = p.lilac },
    ["htmlTag"] = { fg = p.subtle },
    ["htmlTagN"] = { fg = p.text },
    ["htmlTagName"] = { fg = p.spearmint },

    -- Markdown
    ["mkdCode"] = { fg = p.spearmint, italic = true },
    ["mkdCodeDelimiter"] = { fg = p.havona },
    ["mkdCodeEnd"] = { fg = p.spearmint },
    ["mkdCodeStart"] = { fg = p.spearmint },
    ["mkdFootnotes"] = { fg = p.spearmint },
    ["mkdID"] = { fg = p.spearmint, underline = true },
    ["mkdInlineURL"] = { fg = p.lilac, underline = true },
    ["mkdLink"] = { link = "mkdInlineURL" },
    ["mkdLinkDef"] = { link = "mkdInlineURL" },
    ["mkdListItemLine"] = { fg = p.text },
    ["mkdRule"] = { fg = p.subtle },
    ["mkdURL"] = { link = "mkdInlineURL" },
    ["markdownDelimiter"] = { fg = p.subtle },
    ["markdownH1"] = { fg = p.lilac, bold = true },
    ["markdownH1Delimiter"] = { link = "markdownH1" },
    ["markdownH2"] = { fg = p.spearmint, bold = true },
    ["markdownH2Delimiter"] = { link = "markdownH2" },
    ["markdownH3"] = { fg = p.havona, bold = true },
    ["markdownH3Delimiter"] = { link = "markdownH3" },
    ["markdownH4"] = { fg = p.gold, bold = true },
    ["markdownH4Delimiter"] = { link = "markdownH4" },
    ["markdownH5"] = { fg = p.puya, bold = true },
    ["markdownH5Delimiter"] = { link = "markdownH5" },
    ["markdownH6"] = { fg = p.spearmint, bold = true },
    ["markdownH6Delimiter"] = { link = "markdownH6" },
    ["markdownUrl"] = { link = "markdownLinkText" },

    -- Diagnostics
    ["DiagnosticError"] = { fg = p.azalea },
    ["DiagnosticHint"] = { fg = p.lilac },
    ["DiagnosticInfo"] = { fg = p.spearmint },
    ["DiagnosticWarn"] = { fg = p.gold },
    ["DiagnosticDefaultError"] = { fg = p.azalea },
    ["DiagnosticDefaultHint"] = { fg = p.lilac },
    ["DiagnosticDefaultInfo"] = { fg = p.spearmint },
    ["DiagnosticDefaultWarn"] = { fg = p.gold },
    ["DiagnosticFloatingError"] = { fg = p.azalea },
    ["DiagnosticFloatingHint"] = { fg = p.lilac },
    ["DiagnosticFloatingInfo"] = { fg = p.spearmint },
    ["DiagnosticFloatingWarn"] = { fg = p.gold },
    ["DiagnosticSignError"] = { fg = p.azalea },
    ["DiagnosticSignHint"] = { fg = p.lilac },
    ["DiagnosticSignInfo"] = { fg = p.spearmint },
    ["DiagnosticSignWarn"] = { fg = p.gold },
    ["DiagnosticStatusLineError"] = { fg = p.azalea, bg = p.surface },
    ["DiagnosticStatusLineHint"] = { fg = p.lilac, bg = p.surface },
    ["DiagnosticStatusLineInfo"] = { fg = p.spearmint, bg = p.surface },
    ["DiagnosticStatusLineWarn"] = { fg = p.gold, bg = p.surface },
    ["DiagnosticUnderlineError"] = { sp = p.azalea, undercurl = true },
    ["DiagnosticUnderlineHint"] = { sp = p.lilac, undercurl = true },
    ["DiagnosticUnderlineInfo"] = { sp = p.spearmint, undercurl = true },
    ["DiagnosticUnderlineWarn"] = { sp = p.gold, undercurl = true },
    ["DiagnosticVirtualTextError"] = { fg = p.azalea },
    ["DiagnosticVirtualTextHint"] = { fg = p.lilac },
    ["DiagnosticVirtualTextInfo"] = { fg = p.spearmint },
    ["DiagnosticVirtualTextWarn"] = { fg = p.gold },

    -- Treesitter
    ["@boolean"] = { link = "Boolean" },
    ["@character"] = { link = "Character" },
    ["@character.special"] = { link = "@character" },
    ["@class"] = { fg = p.spearmint },
    ["@comment"] = { link = "Comment" },
    ["@conditional"] = { link = "Conditional" },
    ["@constant"] = { link = "Constant" },
    ["@constant.builtin"] = { fg = p.azalea },
    ["@constant.macro"] = { link = "@constant" },
    ["@constructor"] = { fg = p.spearmint },
    ["@field"] = { fg = p.spearmint },
    ["@function"] = { link = "Function" },
    ["@function.builtin"] = { fg = p.azalea },
    ["@function.macro"] = { link = "@function" },
    ["@include"] = { link = "Include" },
    ["@interface"] = { fg = p.spearmint },
    ["@keyword"] = { link = "Keyword" },
    ["@keyword.operator"] = { fg = p.subtle },
    ["@label"] = { link = "Label" },
    ["@macro"] = { link = "Macro" },
    ["@method"] = { fg = p.havona },
    ["@number"] = { link = "Number" },
    ["@operator"] = { link = "Operator" },
    ["@parameter"] = { fg = p.lilac, italic = false },
    ["@preproc"] = { link = "PreProc" },
    ["@property"] = { fg = p.spearmint, italic = false },
    ["@punctuation"] = { fg = p.muted },
    ["@punctuation.bracket"] = { link = "@punctuation" },
    ["@punctuation.delimiter"] = { link = "@punctuation" },
    ["@punctuation.special"] = { link = "@punctuation" },
    ["@regexp"] = { link = "String" },
    ["@repeat"] = { link = "Repeat" },
    ["@storageclass"] = { link = "StorageClass" },
    ["@string"] = { link = "String" },
    ["@string.escape"] = { fg = p.puya },
    ["@string.special"] = { link = "@string" },
    ["@symbol"] = { link = "Identifier" },
    ["@tag"] = { link = "Tag" },
    ["@tag.attribute"] = { fg = p.lilac },
    ["@tag.delimiter"] = { fg = p.subtle },
    ["@text"] = { fg = p.text },
    ["@text.strong"] = { bold = true },
    ["@text.emphasis"] = { italic = true },
    ["@text.underline"] = { underline = true },
    ["@text.strike"] = { strikethrough = true },
    ["@text.math"] = { link = "Special" },
    ["@text.environment"] = { link = "Macro" },
    ["@text.environment.name"] = { link = "Type" },
    ["@text.title"] = { link = "Title" },
    ["@text.uri"] = { fg = p.lilac },
    ["@text.note"] = { link = "SpecialComment" },
    ["@text.warning"] = { fg = p.gold },
    ["@text.danger"] = { fg = p.azalea },
    ["@todo"] = { link = "Todo" },
    ["@type"] = { link = "Type" },
    ["@variable"] = { fg = p.text, italic = false },
    ["@variable.builtin"] = { fg = p.azalea },
    ["@namespace"] = { link = "@include" },
    ["@text.title.1.markdown"] = { link = "markdownH1" },
    ["@text.title.1.marker.markdown"] = { link = "markdownH1Delimiter" },
    ["@text.title.2.markdown"] = { link = "markdownH2" },
    ["@text.title.2.marker.markdown"] = { link = "markdownH2Delimiter" },
    ["@text.title.3.markdown"] = { link = "markdownH3" },
    ["@text.title.3.marker.markdown"] = { link = "markdownH3Delimiter" },
    ["@text.title.4.markdown"] = { link = "markdownH4" },
    ["@text.title.4.marker.markdown"] = { link = "markdownH4Delimiter" },
    ["@text.title.5.markdown"] = { link = "markdownH5" },
    ["@text.title.5.marker.markdown"] = { link = "markdownH5Delimiter" },
    ["@text.title.6.markdown"] = { link = "markdownH6" },
    ["@text.title.6.marker.markdown"] = { link = "markdownH6Delimiter" },

    -- LSP
    ["@lsp.type.comment"] = nil,
    ["@lsp.type.enum"] = { link = "@type" },
    ["@lsp.type.keyword"] = { link = "@keyword" },
    ["@lsp.type.interface"] = { link = "@interface" },
    ["@lsp.type.namespace"] = { link = "@namespace" },
    ["@lsp.type.parameter"] = { link = "@parameter" },
    ["@lsp.type.property"] = { link = "@property" },
    ["@lsp.type.variable"] = nil,
    ["@lsp.typemod.function.defaultLibrary"] = { link = "Special" },
    ["@lsp.typemod.variable.defaultLibrary"] = { link = "@variable.builtin" },
    ["@lsp.typemod.operator.injected"] = { link = "@operator" },
    ["@lsp.typemod.string.injected"] = { link = "@string" },
    ["@lsp.typemod.variable.injected"] = { link = "@variable" },
    ["LspReferenceText"] = { bg = p.hi_med },
    ["LspReferenceRead"] = { bg = p.hi_med },
    ["LspReferenceWrite"] = { bg = p.hi_med },
    ["LspCodeLens"] = { fg = p.subtle }, -- virtual text of code len
    ["LspCodeLensSeparator"] = { fg = p.hi_high },

    -- nvim-telescope/telescope.nvim
    ["TelescopeBorder"] = { fg = p.overlay, bg = p.surface },
    ["TelescopeMatching"] = { fg = p.havona },
    ["TelescopeNormal"] = { fg = p.subtle, bg = p.surface },
    ["TelescopePromptNormal"] = { fg = p.text, bg = p.surface },
    ["TelescopePromptPrefix"] = { fg = p.subtle },
    ["TelescopeSelection"] = { fg = p.text, bg = p.overlay },
    ["TelescopeSelectionCaret"] = { fg = p.havona, bg = p.overlay },
    ["TelescopeTitle"] = { fg = p.subtle },

    -- williamboman/mason.nvim
    ["MasonNormal"] = { link = "NormalFloat", default = true },
    ["MasonHeader"] = { bold = true, fg = p.text, bg = p.havona, default = true },
    ["MasonHeaderSecondary"] = { bold = true, fg = p.text, bg = p.havona, default = true },
    ["MasonHighlight"] = { fg = p.havona, default = true },
    ["MasonHighlightBlock"] = { bg = p.havona, fg = p.text, default = true },
    ["MasonHighlightBlockBold"] = { bg = p.havona, fg = p.text, bold = true, default = true },
    ["MasonHighlightSecondary"] = { fg = p.havona, default = true },
    ["MasonHighlightBlockSecondary"] = { bg = p.havona, fg = p.text, default = true },
    ["MasonHighlightBlockBoldSecondary"] = { bg = p.havona, fg = p.text, bold = true, default = true },
    ["MasonLink"] = { link = "MasonHighlight", default = true },
    ["MasonMuted"] = { fg = p.hi_low, default = true },
    ["MasonMutedBlock"] = { bg = p.hi_low, fg = p.text, default = true },
    ["MasonMutedBlockBold"] = { bg = p.hi_low, fg = p.text, bold = true, default = true },
    ["MasonError"] = { link = "ErrorMsg", default = true },
    ["MasonWarning"] = { link = "WarningMsg", default = true },
    ["MasonHeading"] = { bold = true, default = true },

    -- nvim-tree/nvim-tree.lua
    ["NvimTreeEmptyFolderName"] = { fg = p.muted },
    ["NvimTreeFileDeleted"] = { fg = p.azalea },
    ["NvimTreeFileDirty"] = { fg = p.havona },
    ["NvimTreeFileMerge"] = { fg = p.lilac },
    ["NvimTreeFileNew"] = { fg = p.spearmint },
    ["NvimTreeFileRenamed"] = { fg = p.puya },
    ["NvimTreeFileStaged"] = { fg = p.lilac },
    ["NvimTreeFolderIcon"] = { fg = p.overlay },
    ["NvimTreeFolderName"] = { fg = p.havona },
    ["NvimTreeGitDeleted"] = { fg = p.azalea },
    ["NvimTreeGitDirty"] = { fg = p.havona },
    ["NvimTreeGitIgnored"] = { fg = p.muted },
    ["NvimTreeGitMerge"] = { fg = p.lilac },
    ["NvimTreeGitNew"] = { fg = p.spearmint },
    ["NvimTreeGitRenamed"] = { fg = p.puya },
    ["NvimTreeGitStaged"] = { fg = p.lilac },
    ["NvimTreeImageFile"] = { fg = p.text },
    ["NvimTreeNormal"] = { fg = p.text },
    ["NvimTreeOpenedFile"] = { fg = p.text, bg = p.hi_med },
    ["NvimTreeOpenedFolderName"] = { link = "NvimTreeFolderName" },
    ["NvimTreeRootFolder"] = { fg = p.havona },
    ["NvimTreeSpecialFile"] = { link = "NvimTreeNormal" },
    ["NvimTreeWindowPicker"] = { fg = p.azalea, bg = p.azalea, blend = 10 }
  }

  -- True terminal colors
  vim.g.terminal_color_0 = p.overlay -- Black
  vim.g.terminal_color_8 = p.muted   -- Bright black
  vim.g.terminal_color_1 = p.azalea    -- Red
  vim.g.terminal_color_9 = p.azalea    -- Bright red
  vim.g.terminal_color_2 = p.spearmint    -- Green
  vim.g.terminal_color_10 = p.spearmint   -- Bright green
  vim.g.terminal_color_3 = p.gold    -- Yellow
  vim.g.terminal_color_11 = p.gold   -- Bright yellow
  vim.g.terminal_color_4 = p.puya    -- Blue
  vim.g.terminal_color_12 = p.puya   -- Bright blue
  vim.g.terminal_color_5 = p.lilac    -- Magenta
  vim.g.terminal_color_13 = p.lilac   -- Bright magenta
  vim.g.terminal_color_6 = p.havona  -- Cyan
  vim.g.terminal_color_14 = p.havona -- Bright cyan
  vim.g.terminal_color_7 = p.text    -- White
  vim.g.terminal_color_15 = p.text   -- Bright white

  -- Apply highlights
  for group, color in pairs(highlights) do
    vim.api.nvim_set_hl(0, group, color)
  end
end

return M
